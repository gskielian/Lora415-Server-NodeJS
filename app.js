var firebase = require("firebase");

firebase.initializeApp({
  databaseURL: "https://crackling-heat-8070.firebaseio.com"
});

//example of getting data once
var db = firebase.database();
var ref = db.ref("/public");
ref.once("value", function(snapshot) {
  console.log(snapshot.val());
});

//Setting Data:
//set, update, push, transaction


//example of setting data
var usersRef = ref.child("users");
usersRef.set({
  alanisawesome: {
    date_of_birth: "June 23, 1912",
    full_name: "Alan Turing"
  },
  gracehop: {
    date_of_birth: "December 9, 1906",
    full_name: "Grace Hopper"
  }
});


//example of updating saved data
var hopperRef = usersRef.child("gracehop");
hopperRef.update({
  "nickname": "Amazing Grace"
});


//
usersRef.update({
  "alanisawesome/nickname": "Alan The Machine",
  "gracehop/nickname": "Amazing Grace"
});

//the following would remove all other fields
/*
usersRef.update({
    "alanisawesome": {
          "nickname": "Alan The Machine"
    },
    "gracehop": {
          "nickname": "Amazing Grace"
    }
});

*/

// example of pushing data, this creates a unique chronological id
var postsRef = ref.child("posts");
postsRef.push({
  author: "gracehop",
  title: "Announcing COBOL, a New Programming Language"
});

// Generate a reference to a new location and add some data using push()
var newPostRef = postsRef.push();

// Get the unique ID generated by push()
var postId = newPostRef.key;


//examples of Retreiving data

// Get a database reference
var ref = db.ref("/public");

// Attach an asynchronous callback to read the data 
ref.on("value", function(snapshot) {
  console.log(snapshot.val());
}, function (errorObject) {
  console.log("The read failed: " + errorObject.code);
});


// Retrieve new posts as they are added to our database
ref.on("child_added", function(snapshot, prevChildKey) {
  var newUser = snapshot.val();
  console.log("Name: " + newUser.full_name);
  console.log("DOB: " + newUser.date_of_birth);
});

// Get the data on a post that has changed
ref.on("child_changed", function(snapshot) {
  var changedUser = snapshot.val();
  console.log("new name is " + changedUser.full_name);
});


//child removed example

// Get the data on a post that has been removed
ref.on("child_removed", function(snapshot) {
  var deletedPost = snapshot.val();
  console.log("The user named '" + deletedUser.full_name + "' has been deleted");
});

ref.once("value", function(data) {
  var user_names = data.val();
  console.log(user_names);
});

